package vistas;

import controladores.ControladorCrearPartida;
import controladores.ControladorLobbyPartida;
import controladores.ControladorPerfil;
import modelos.ConstantesVentanas;
import modelos.ModeloCrearPartida;
import modelos.ModeloObserver;
import modelos.ModeloPerfil;
import modelos.Observable;

/**
 *
 * @author Katt
 */
public class JLobbyPartida extends javax.swing.JFrame implements ModeloObserver{
    private ControladorLobbyPartida controlador;
    /**
     * Creates new form JLobbyPartida
     */
    public JLobbyPartida(ControladorLobbyPartida controlador) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.controlador = controlador;
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPerfil = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnListo = new javax.swing.JButton();
        labelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPerfil.setBorderPainted(false);
        btnPerfil.setContentAreaFilled(false);
        btnPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPerfilActionPerformed(evt);
            }
        });
        getContentPane().add(btnPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 40, 90, 130));

        btnBack.setBorderPainted(false);
        btnBack.setContentAreaFilled(false);
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 190, 60));

        btnListo.setBorderPainted(false);
        btnListo.setContentAreaFilled(false);
        getContentPane().add(btnListo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 400, 180, 60));

        labelFondo.setIcon(new javax.swing.ImageIcon("C:\\Users\\OMEN\\Documents\\GitHub\\RummyEquipo6\\GUIs_Rummy\\src\\main\\java\\recursos\\fondos\\LobbyPartidaImg.png")); // NOI18N
        getContentPane().add(labelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPerfilActionPerformed
        // TODO add your handling code here:
        controlador.mostrarPerfil();
    }//GEN-LAST:event_btnPerfilActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnListo;
    private javax.swing.JButton btnPerfil;
    private javax.swing.JLabel labelFondo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        
    }

    @Override
    public void cambiarVentana(int ventana) {
        if (ventana == ConstantesVentanas.JCREARPARTIDA) {
            this.setVisible(false);
            ModeloCrearPartida m = new ModeloCrearPartida();
            //Cargamos controlador y le asignamos qué modelo controlar
            ControladorCrearPartida c = new ControladorCrearPartida(m);
            //Cargamos 2 vistas y asignamos cual queremos que sea su controlador 
            JCrearPartida v = new JCrearPartida(c);
            //añadimos observadores al modelo. En este caso, dos vistas.
            m.addObservador(v);
        } else if (ventana == ConstantesVentanas.JPERFIL) {
            this.setVisible(false);
            ModeloPerfil m = new ModeloPerfil();
            //Cargamos controlador y le asignamos qué modelo controlar
            ControladorPerfil c = new ControladorPerfil(m);
            //Cargamos 2 vistas y asignamos cual queremos que sea su controlador 
            JPerfil v = new JPerfil(c);
            //añadimos observadores al modelo. En este caso, dos vistas.
            m.addObservador(v);
        } 
    }
}
